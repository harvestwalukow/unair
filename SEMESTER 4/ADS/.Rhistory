numeric_cols <- c("2023", "2019", "2020-2021", "2022-2023", "Mikro", "Kecil", "Datang", "Berangkat")
shp_data <- shp_data %>%
mutate(across(all_of(numeric_cols), as.numeric))
View(shp_data)
View(shp)
View(shp)
View(data)
library(GWmodel)
# Ambil koordinat centroid dari provinsi
coords <- st_centroid(st_geometry(shp_data)) %>% st_coordinates()
# Konversi ke Spatial (karena GWmodel tidak pakai sf langsung)
spatial_data <- as(shp_data, "Spatial")
# Jalankan MGWR dengan gwr4()
mgwr_result <- gwr4(
formula = `2023` ~ `2019` + `2020-2021` + `2022-2023` + Mikro + Kecil + Datang + Berangkat,
data = spatial_data,
coords = coords,
kernel = "bisquare",
adaptive = TRUE
)
library(GWmodel)
# Ambil koordinat centroid dari provinsi
coords <- st_centroid(st_geometry(shp_data)) %>% st_coordinates()
# Konversi ke Spatial (karena GWmodel tidak pakai sf langsung)
spatial_data <- as(shp_data, "Spatial")
mgwr_result <- gwr.multiscale(
formula = `2023` ~ `2019` + `2020-2021` + `2022-2023` + Mikro + Kecil + Datang + Berangkat,
data = spatial_data,
coords = coords,
kernel = "bisquare",
adaptive = TRUE
)
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
# Load data CSV
data_tourism <- read_csv("data_Lengkap.csv")
# Tampilkan struktur data
str(data_tourism)
head(data_tourism)
# Tampilkan nama kolom
cat("Nama kolom dalam dataset:\n")
print(names(data_tourism))
# Ringkasan statistik
summary(data_tourism)
# Periksa missing values
cat("Missing values per kolom:\n")
print(colSums(is.na(data_tourism)))
# Hapus baris dengan missing values
data_clean <- data_tourism %>%
filter(!is.na(`2023`) & !is.na(Mikro) & !is.na(Kecil) & !is.na(Datang))
# Rename kolom 2023 menjadi Wisatawan_2023 untuk menghindari masalah
data_clean$Wisatawan_2023 <- data_clean$`2023`
# Tampilkan data yang sudah dibersihkan
cat("\nData yang sudah dibersihkan:\n")
head(data_clean)
str(data_clean)
# Standardisasi variabel (z-score)
data_clean <- data_clean %>%
mutate(
wisatawan_z = scale(Wisatawan_2023),
mikro_z = scale(Mikro),
kecil_z = scale(Kecil),
penumpang_z = scale(Datang)
)
# Load shapefile Indonesia level 1 (provinsi)
indonesia_shp <- st_read("gadm41_IDN_shp/gadm41_IDN_1.shp")
# Tampilkan informasi shapefile
cat("=== INFORMASI SHAPEFILE ===\n")
cat("Jumlah provinsi:", nrow(indonesia_shp), "\n")
cat("Jumlah kolom:", ncol(indonesia_shp), "\n")
cat("Nama kolom:", names(indonesia_shp), "\n\n")
# Tampilkan 5 baris pertama
cat("5 baris pertama shapefile:\n")
print(head(indonesia_shp[, 1:5], 5))
# Plot peta Indonesia
plot(st_geometry(indonesia_shp), main = "Peta Provinsi Indonesia")
indonesia_shp
indonesia_shp$NAME_1
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
# Install jika belum ada
if (!require(sf)) install.packages("sf")
if (!require(sp)) install.packages("sp")
if (!require(dplyr)) install.packages("dplyr")
if (!require(readr)) install.packages("readr")
if (!require(GWmodel)) install.packages("GWmodel")
# Load library
library(sf)
library(sp)
library(dplyr)
library(readr)
library(GWmodel)
library(ggplot2)
# Load data CSV dan Shapefile
data_eko <- read_csv("data_Lengkap.csv")
peta_provinsi <- st_read("gadm41_IDN_shp/gadm41_IDN_1.shp", quiet = TRUE)
# Samakan format nama provinsi (uppercase) untuk join
data_eko$Provinsi_upper <- toupper(data_eko$Provinsi)
peta_provinsi$NAME_1_upper <- toupper(peta_provinsi$NAME_1)
# Gabungkan data spasial dengan data ekonomi
# inner_join digunakan agar hanya provinsi yang ada di kedua dataset yang diambil
peta_lengkap <- inner_join(peta_provinsi, data_eko, by = c("NAME_1_upper" = "Provinsi_upper"))
# Bersihkan data dari NA dan ubah nama kolom '2023'
peta_bersih <- peta_lengkap %>%
rename(Wisatawan_2023 = `2023`) %>%
filter(!is.na(Wisatawan_2023) & !is.na(Mikro) & !is.na(Kecil) & !is.na(Datang))
# Konversi ke format Spasial (sp) yang dibutuhkan GWmodel
data_sp <- as(peta_bersih, "Spatial")
# Tentukan formula: Wisatawan sebagai variabel dependen
# Variabel independen: Mikro, Kecil, dan Datang
formula_mgwr <- Wisatawan_2023 ~ Mikro + Kecil + Datang
# Tentukan variabel Global (pengaruhnya konstan)
# Sisanya (Mikro, Kecil) akan otomatis dianggap Lokal
vars_global <- c("Datang")
# Cari bandwidth optimal menggunakan Cross-Validation (CV)
# Ini mungkin memakan waktu beberapa saat
bw_optimal <- bw.gwr.sem(formula = formula_mgwr, data = data_sp,
global.vars = vars_global, adaptive = TRUE)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
# Install jika belum ada
if (!require(sf)) install.packages("sf")
if (!require(sp)) install.packages("sp")
if (!require(dplyr)) install.packages("dplyr")
if (!require(readr)) install.packages("readr")
if (!require(GWmodel)) install.packages("GWmodel")
# Load library
library(sf)
library(sp)
library(dplyr)
library(readr)
library(GWmodel)
library(ggplot2)
# Load data CSV dan Shapefile
data_eko <- read_csv("data_Lengkap.csv")
peta_provinsi <- st_read("gadm41_IDN_shp/gadm41_IDN_1.shp", quiet = TRUE)
# Samakan format nama provinsi (uppercase) untuk join
data_eko$Provinsi_upper <- toupper(data_eko$Provinsi)
peta_provinsi$NAME_1_upper <- toupper(peta_provinsi$NAME_1)
# Gabungkan data spasial dengan data ekonomi
# inner_join digunakan agar hanya provinsi yang ada di kedua dataset yang diambil
peta_lengkap <- inner_join(peta_provinsi, data_eko, by = c("NAME_1_upper" = "Provinsi_upper"))
# Bersihkan data dari NA dan ubah nama kolom '2023'
peta_bersih <- peta_lengkap %>%
rename(Wisatawan_2023 = `2023`) %>%
filter(!is.na(Wisatawan_2023) & !is.na(Mikro) & !is.na(Kecil) & !is.na(Datang))
# Konversi ke format Spasial (sp) yang dibutuhkan GWmodel
data_sp <- as(peta_bersih, "Spatial")
# Tentukan formula: Wisatawan sebagai variabel dependen
formula_mgwr <- Wisatawan_2023 ~ Mikro + Kecil + Datang
# PENDEKATAN MANUAL:
# Karena bw.gwr.sem() tidak ditemukan, kita cari bandwidth tunggal
# menggunakan GWR biasa dan memakainya sebagai perkiraan untuk model mixed.
cat("Mencari bandwidth perkiraan menggunakan GWR standar...\n")
bw_perkiraan <- bw.gwr(formula = formula_mgwr, data = data_sp,
adaptive = TRUE, approach = "CV")
cat("Bandwidth perkiraan yang akan digunakan:", bw_perkiraan, "\n\n")
# Tentukan variabel mana yang pengaruhnya Global (konstan)
# Variabel yang tidak disebut di sini (Mikro, Kecil) akan dianggap Lokal.
vars_global <- c("Datang")
# Jalankan model Mixed GWR (gwr.sem) menggunakan bandwidth perkiraan
model_mgwr <- gwr.sem(formula = formula_mgwr, data = data_sp,
bw = bw_perkiraan, global.vars = vars_global,
adaptive = TRUE, kernel = "gaussian")
# Install jika belum ada
if (!require(sf)) install.packages("sf")
if (!require(sp)) install.packages("sp")
if (!require(dplyr)) install.packages("dplyr")
if (!require(readr)) install.packages("readr")
if (!require(GWmodel)) install.packages("GWmodel")
# Load library
library(sf)
library(sp)
library(dplyr)
library(readr)
library(GWmodel)
library(ggplot2)
# Load data CSV dan Shapefile
data_eko <- read_csv("data_Lengkap.csv")
peta_provinsi <- st_read("gadm41_IDN_shp/gadm41_IDN_1.shp", quiet = TRUE)
# Samakan format nama provinsi (uppercase) untuk join
data_eko$Provinsi_upper <- toupper(data_eko$Provinsi)
peta_provinsi$NAME_1_upper <- toupper(peta_provinsi$NAME_1)
# Gabungkan data spasial dengan data ekonomi
# inner_join digunakan agar hanya provinsi yang ada di kedua dataset yang diambil
peta_lengkap <- inner_join(peta_provinsi, data_eko, by = c("NAME_1_upper" = "Provinsi_upper"))
# Bersihkan data dari NA dan ubah nama kolom '2023'
peta_bersih <- peta_lengkap %>%
rename(Wisatawan_2023 = `2023`) %>%
filter(!is.na(Wisatawan_2023) & !is.na(Mikro) & !is.na(Kecil) & !is.na(Datang))
# Konversi ke format Spasial (sp) yang dibutuhkan GWmodel
data_sp <- as(peta_bersih, "Spatial")
View(peta_bersih)
View(peta_lengkap)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
# Install jika belum ada
if (!require(sf)) install.packages("sf")
if (!require(sp)) install.packages("sp")
if (!require(dplyr)) install.packages("dplyr")
if (!require(readr)) install.packages("readr")
if (!require(GWmodel)) install.packages("GWmodel")
# Load library
library(sf)
library(sp)
library(dplyr)
library(readr)
library(GWmodel)
library(ggplot2)
# Load data CSV dan Shapefile
data_eko <- read_csv("data_Lengkap.csv")
peta_provinsi <- st_read("gadm41_IDN_shp/gadm41_IDN_1.shp", quiet = TRUE)
# Samakan format nama provinsi (uppercase) untuk join
data_eko$Provinsi_upper <- toupper(data_eko$Provinsi)
peta_provinsi$NAME_1_upper <- toupper(peta_provinsi$NAME_1)
# Gabungkan data spasial dengan data ekonomi
# inner_join digunakan agar hanya provinsi yang ada di kedua dataset yang diambil
peta_lengkap <- inner_join(peta_provinsi, data_eko, by = c("NAME_1_upper" = "Provinsi_upper"))
# Bersihkan data dari NA dan ubah nama kolom '2023'
peta_bersih <- peta_lengkap %>%
rename(Wisatawan_2023 = `2023`) %>%
filter(!is.na(Wisatawan_2023) & !is.na(Mikro) & !is.na(Kecil) & !is.na(Datang))
# Konversi ke format Spasial (sp) yang dibutuhkan GWmodel
data_sp <- as(peta_bersih, "Spatial")
# Karena gwr.sem() tidak tersedia, kita simulasikan MGWR
# dengan memisahkan efek global dan lokal secara manual.
# --- TAHAP 1: Modelkan Efek GLOBAL menggunakan OLS ---
cat("--- TAHAP 1: Menjalankan OLS untuk Variabel Global (Datang) ---\n")
model_global_ols <- lm(Wisatawan_2023 ~ Datang, data = data_sp@data)
# Ambil koefisien global untuk 'Datang'
coef_datang_global <- coef(model_global_ols)["Datang"]
cat("Koefisien Global untuk 'Datang' (dari OLS) adalah:", round(coef_datang_global, 4), "\n\n")
# Simpan residual dari model global.
# Ini adalah variasi wisatawan yang TIDAK dapat dijelaskan oleh 'Datang'.
data_sp$residual_global <- residuals(model_global_ols)
# --- TAHAP 2: Modelkan Efek LOKAL pada Residual menggunakan GWR ---
# Kita gunakan GWR untuk melihat bagaimana 'Mikro' dan 'Kecil' (variabel lokal)
# menjelaskan sisa variasi (residual) secara geografis.
formula_local_gwr <- residual_global ~ Mikro + Kecil
cat("--- TAHAP 2: Mencari Bandwidth untuk Model GWR Lokal ---\n")
bw_local <- bw.gwr(formula = formula_local_gwr, data = data_sp,
adaptive = TRUE, approach = "CV")
cat("Bandwidth optimal untuk model lokal:", bw_local, "\n\n")
# Jalankan model GWR pada residual
model_local_gwr <- gwr.basic(formula = formula_local_gwr, data = data_sp,
bw = bw_local, adaptive = TRUE, kernel = "gaussian")
cat("--- Hasil Model GWR Lokal (pada Residual) ---\n")
print(model_local_gwr)
# Ambil hasil koefisien dari model GWR lokal
data_sp$coef_mikro_local <- model_local_gwr$SDF$Mikro
data_sp$coef_kecil_local <- model_local_gwr$SDF$Kecil
# Konversi kembali ke format sf untuk plotting dengan ggplot2
hasil_sf <- st_as_sf(data_sp)
# Plot peta koefisien untuk variabel 'Mikro'
ggplot(data = hasil_sf) +
geom_sf(aes(fill = coef_mikro_local)) +
scale_fill_viridis_c(option = "plasma") +
labs(title = "Peta Koefisien Lokal: Pengaruh Industri Mikro",
subtitle = "Pengaruh lokal 'Mikro' setelah memperhitungkan efek global 'Datang'",
fill = "Koefisien Lokal") +
theme_minimal()
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(sf)
library(sp)
library(dplyr)
library(readr)
library(GWmodel)
library(ggplot2)
data_eko <- read_csv("data_Lengkap.csv")
peta_provinsi <- st_read("gadm41_IDN_shp/gadm41_IDN_1.shp", quiet = TRUE)
data_eko$Provinsi_upper <- toupper(data_eko$Provinsi)
peta_provinsi$NAME_1_upper <- toupper(peta_provinsi$NAME_1)
peta_lengkap <- inner_join(peta_provinsi, data_eko, by = c("NAME_1_upper" = "Provinsi_upper"))
peta_bersih <- peta_lengkap %>%
rename(Wisatawan_2023 = `2023`) %>%
filter(!is.na(Wisatawan_2023) & !is.na(Mikro) & !is.na(Kecil) & !is.na(Datang))
data_sp <- as(peta_bersih, "Spatial")
cat("--- TAHAP 1: Menjalankan OLS untuk Variabel Global (Datang) ---\n")
model_global_ols <- lm(Wisatawan_2023 ~ Datang, data = data_sp@data)
coef_datang_global <- coef(model_global_ols)["Datang"]
cat("Koefisien Global untuk 'Datang' (dari OLS) adalah:", round(coef_datang_global, 4), "\n\n")
data_sp$residual_global <- residuals(model_global_ols)
formula_local_gwr <- residual_global ~ Mikro + Kecil
cat("--- TAHAP 2: Mencari Bandwidth untuk Model GWR Lokal ---\n")
bw_local <- bw.gwr(formula = formula_local_gwr, data = data_sp,
adaptive = TRUE, approach = "CV")
cat("Bandwidth optimal untuk model lokal:", bw_local, "\n\n")
model_local_gwr <- gwr.basic(formula = formula_local_gwr, data = data_sp,
bw = bw_local, adaptive = TRUE, kernel = "gaussian")
cat("--- Hasil Model GWR Lokal (pada Residual) ---\n")
print(model_local_gwr)
cat("\n=== PERHITUNGAN PERFORMA MODEL GABUNGAN ===\n")
# Ambil prediksi dari tahap global (OLS)
prediksi_global <- predict(model_global_ols)
# Ambil prediksi dari tahap lokal (GWR pada residual)
prediksi_lokal <- model_local_gwr$fitted.values
# Gabungkan prediksi: prediksi_total = prediksi_global + prediksi_lokal_residual
prediksi_gabungan <- prediksi_global + prediksi_lokal
# Nilai aktual
nilai_aktual <- data_sp$Wisatawan_2023
# Hitung R-squared gabungan
tss <- sum((nilai_aktual - mean(nilai_aktual))^2)  # Total Sum of Squares
rss <- sum((nilai_aktual - prediksi_gabungan)^2)   # Residual Sum of Squares
r_squared_gabungan <- 1 - (rss / tss)
# Hitung Adjusted R-squared
n <- length(nilai_aktual)
p <- 4  # Jumlah parameter: intercept + Datang + Mikro + Kecil
adj_r_squared_gabungan <- 1 - ((1 - r_squared_gabungan) * (n - 1) / (n - p - 1))
# Hitung RMSE dan MAE
rmse_gabungan <- sqrt(mean((nilai_aktual - prediksi_gabungan)^2))
mae_gabungan <- mean(abs(nilai_aktual - prediksi_gabungan))
cat("PERFORMA MODEL GABUNGAN (Global OLS + Local GWR):\n")
cat("================================================\n")
cat("R-squared Gabungan:", round(r_squared_gabungan, 6), "\n")
cat("Adjusted R-squared Gabungan:", round(adj_r_squared_gabungan, 6), "\n")
cat("RMSE:", round(rmse_gabungan, 2), "\n")
cat("MAE:", round(mae_gabungan, 2), "\n\n")
# Bandingkan dengan model individual
cat("PERBANDINGAN DENGAN MODEL INDIVIDUAL:\n")
cat("=====================================\n")
# R-squared dari model global saja
r_squared_global <- summary(model_global_ols)$r.squared
adj_r_squared_global <- summary(model_global_ols)$adj.r.squared
cat("Model Global (OLS) saja:\n")
cat("  R-squared:", round(r_squared_global, 6), "\n")
cat("  Adjusted R-squared:", round(adj_r_squared_global, 6), "\n\n")
# R-squared dari model lokal (pada residual)
cat("Model Lokal (GWR pada residual):\n")
cat("  R-squared:", round(model_local_gwr$GW.diagnostic$gw.R2, 6), "\n")
cat("  Adjusted R-squared:", round(model_local_gwr$GW.diagnostic$gw.R2.adj, 6), "\n\n")
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(sf)
library(sp)
library(dplyr)
library(readr)
library(GWmodel)
library(ggplot2)
data_eko <- read_csv("data_Lengkap.csv")
peta_provinsi <- st_read("gadm41_IDN_shp/gadm41_IDN_1.shp", quiet = TRUE)
data_eko$Provinsi_upper <- toupper(data_eko$Provinsi)
peta_provinsi$NAME_1_upper <- toupper(peta_provinsi$NAME_1)
peta_lengkap <- inner_join(peta_provinsi, data_eko, by = c("NAME_1_upper" = "Provinsi_upper"))
peta_bersih <- peta_lengkap %>%
rename(Wisatawan_2023 = `2023`) %>%
filter(!is.na(Wisatawan_2023) & !is.na(Mikro) & !is.na(Kecil) & !is.na(Datang))
data_sp <- as(peta_bersih, "Spatial")
cat("--- TAHAP 1: Menjalankan OLS untuk Variabel Global (Datang) ---\n")
model_global_ols <- lm(Wisatawan_2023 ~ Datang, data = data_sp@data)
coef_datang_global <- coef(model_global_ols)["Datang"]
cat("Koefisien Global untuk 'Datang' (dari OLS) adalah:", round(coef_datang_global, 4), "\n\n")
data_sp$residual_global <- residuals(model_global_ols)
formula_local_gwr <- residual_global ~ Mikro + Kecil
cat("--- TAHAP 2: Mencari Bandwidth untuk Model GWR Lokal ---\n")
bw_local <- bw.gwr(formula = formula_local_gwr, data = data_sp,
adaptive = TRUE, approach = "CV")
cat("Bandwidth optimal untuk model lokal:", bw_local, "\n\n")
model_local_gwr <- gwr.basic(formula = formula_local_gwr, data = data_sp,
bw = bw_local, adaptive = TRUE, kernel = "gaussian")
cat("--- Hasil Model GWR Lokal (pada Residual) ---\n")
print(model_local_gwr)
cat("\n=== PERHITUNGAN PERFORMA MODEL GABUNGAN ===\n")
# Ambil prediksi dari tahap global (OLS)
prediksi_global <- predict(model_global_ols)
# Ambil prediksi dari tahap lokal (GWR pada residual)
prediksi_lokal <- model_local_gwr$fitted.values
# Gabungkan prediksi: prediksi_total = prediksi_global + prediksi_lokal_residual
prediksi_gabungan <- prediksi_global + prediksi_lokal
# Nilai aktual
nilai_aktual <- data_sp$Wisatawan_2023
# Hitung R-squared gabungan
tss <- sum((nilai_aktual - mean(nilai_aktual))^2)  # Total Sum of Squares
rss <- sum((nilai_aktual - prediksi_gabungan)^2)   # Residual Sum of Squares
r_squared_gabungan <- 1 - (rss / tss)
# Hitung Adjusted R-squared
n <- length(nilai_aktual)
p <- 4  # Jumlah parameter: intercept + Datang + Mikro + Kecil
adj_r_squared_gabungan <- 1 - ((1 - r_squared_gabungan) * (n - 1) / (n - p - 1))
# Hitung RMSE dan MAE
rmse_gabungan <- sqrt(mean((nilai_aktual - prediksi_gabungan)^2))
mae_gabungan <- mean(abs(nilai_aktual - prediksi_gabungan))
cat("PERFORMA MODEL GABUNGAN (Global OLS + Local GWR):\n")
cat("================================================\n")
cat("R-squared Gabungan:", round(r_squared_gabungan, 6), "\n")
cat("Adjusted R-squared Gabungan:", round(adj_r_squared_gabungan, 6), "\n")
cat("RMSE:", round(rmse_gabungan, 2), "\n")
cat("MAE:", round(mae_gabungan, 2), "\n\n")
# Bandingkan dengan model individual
cat("PERBANDINGAN DENGAN MODEL INDIVIDUAL:\n")
cat("=====================================\n")
# R-squared dari model global saja
r_squared_global <- summary(model_global_ols)$r.squared
adj_r_squared_global <- summary(model_global_ols)$adj.r.squared
cat("Model Global (OLS) saja:\n")
cat("  R-squared:", round(r_squared_global, 6), "\n")
cat("  Adjusted R-squared:", round(adj_r_squared_global, 6), "\n\n")
# R-squared dari model lokal (pada residual)
cat("Model Lokal (GWR pada residual):\n")
cat("  R-squared:", round(model_local_gwr$GW.diagnostic$gw.R2, 6), "\n")
# Check if adjusted R-squared is available, if not calculate manually
if(!is.null(model_local_gwr$GW.diagnostic$gw.R2.adj) && is.numeric(model_local_gwr$GW.diagnostic$gw.R2.adj)) {
cat("  Adjusted R-squared:", round(model_local_gwr$GW.diagnostic$gw.R2.adj, 6), "\n\n")
} else {
# Calculate adjusted R-squared manually for local model
n_local <- length(model_local_gwr$fitted.values)
p_local <- 2  # Mikro + Kecil (intercept handled separately in GWR)
gwr_adj_r2 <- 1 - ((1 - model_local_gwr$GW.diagnostic$gw.R2) * (n_local - 1) / (n_local - p_local - 1))
cat("  Adjusted R-squared:", round(gwr_adj_r2, 6), "(calculated manually)\n\n")
}
cat("Model Gabungan (Global + Lokal):\n")
cat("  R-squared:", round(r_squared_gabungan, 6), "\n")
cat("  Adjusted R-squared:", round(adj_r_squared_gabungan, 6), "\n\n")
# Simpan hasil untuk analisis lebih lanjut
data_sp$prediksi_gabungan <- prediksi_gabungan
source("~/.active-rstudio-document")
View(data_sp)
View(peta_provinsi)
View(peta_bersih)
View(peta_lengkap)
coef(model_global_ols)["Berangkat"]
model_global_ols
summary(model_global_ols)
source("~/.active-rstudio-document")
gwr.multiscale(Wisatawan_2023 ~ Berangkat + Mikro + Datang,
data = data_sp, kernel = "gaussian",
adaptive = TRUE)
source("~/.active-rstudio-document")
# Total Sum of Squares (SST)
sst <- sum((data_sp@data$Wisatawan_2023 - mean(data_sp@data$Wisatawan_2023))^2)
# Sum of Squares for Global OLS
ssr_global <- sum((fitted(model_global_ols) - mean(data_sp@data$Wisatawan_2023))^2)
# Sum of Squares from Local GWR (dari residual model global)
ssr_local <- sum((model_local_gwr$SDF$pred - mean(data_sp$residual_global))^2)
# Combined R-squared
r2_combined <- (ssr_global + ssr_local) / sst
cat("Nilai R-squared gabungan (MGWR-style):", round(r2_combined, 4), "\n")
cat("--- TAHAP 3: Menghitung R-squared Gabungan (Global + Lokal) ---\n")
# Total Sum of Squares (SST)
sst <- sum((data_sp@data$Wisatawan_2023 - mean(data_sp@data$Wisatawan_2023))^2)
# Fitted values from global model
fitted_global <- fitted(model_global_ols)
# Fitted values from local GWR on residuals
fitted_local <- model_local_gwr$SDF$pred
# Combined fitted values (global + local)
fitted_combined <- fitted_global + fitted_local
# Sum of Squares Regression (SSR_combined)
ssr_combined <- sum((fitted_combined - mean(data_sp@data$Wisatawan_2023))^2)
# R-squared gabungan
r2_combined <- ssr_combined / sst
cat("Nilai R-squared gabungan (MGWR-style):", round(r2_combined, 4), "\n")
cat("\n=== PERHITUNGAN PERFORMA MODEL GABUNGAN (MGWR) ===\n")
# Ambil prediksi dari tahap global (OLS)
prediksi_global <- predict(model_global_ols)
# Ambil prediksi dari tahap lokal (GWR pada residual)
prediksi_lokal <- model_local_gwr$fitted.values
# Gabungkan prediksi: prediksi_total = prediksi_global + prediksi_lokal_residual
prediksi_gabungan <- prediksi_global + prediksi_lokal
# Nilai aktual
nilai_aktual <- data_sp$Wisatawan_2023
# Hitung R-squared gabungan
tss <- sum((nilai_aktual - mean(nilai_aktual))^2)  # Total Sum of Squares
rss <- sum((nilai_aktual - prediksi_gabungan)^2)   # Residual Sum of Squares
r_squared_gabungan <- 1 - (rss / tss)
# Hitung Adjusted R-squared
n <- length(nilai_aktual)
p <- 4  # Jumlah parameter: intercept + Datang + Mikro + Kecil
adj_r_squared_gabungan <- 1 - ((1 - r_squared_gabungan) * (n - 1) / (n - p - 1))
# Hitung RMSE dan MAE
rmse_gabungan <- sqrt(mean((nilai_aktual - prediksi_gabungan)^2))
mae_gabungan <- mean(abs(nilai_aktual - prediksi_gabungan))
# Hitung AIC gabungan
# AIC = n * log(RSS/n) + 2k
aic_gabungan <- n * log(rss/n) + 2 * p
cat("PERFORMA MODEL GABUNGAN (Global OLS + Local GWR):\n")
cat("================================================\n")
cat("R-squared Gabungan:", round(r_squared_gabungan, 6), "\n")
cat("Adjusted R-squared Gabungan:", round(adj_r_squared_gabungan, 6), "\n")
cat("AIC Gabungan:", round(aic_gabungan, 2), "\n")
cat("RMSE:", round(rmse_gabungan, 2), "\n")
cat("MAE:", round(mae_gabungan, 2), "\n\n")
# Bandingkan dengan model individual
cat("PERBANDINGAN DENGAN MODEL INDIVIDUAL:\n")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("D:/UNAIR/SEMESTER 4/ADS/best.R")
source("C:/Users/user/Downloads/mgwr.R")
source("C:/Users/user/Downloads/mgwr.R")
source("C:/Users/user/Downloads/mgwr.R")
source("C:/Users/user/Downloads/mgwr.R")
source("C:/Users/user/Downloads/mgwr.R")
source("C:/Users/user/Downloads/mgwr.R")
bw_local <- bw.gwr(formula = formula_local_gwr, data = data_sp,
adaptive = TRUE, approach = "CV",  bw = 20)
bw_local <- bw.gwr(formula = formula_local_gwr, data = data_sp,
coords = coordinates(data_sp),
adaptive = TRUE, approach = "CV",  bw = 20)
source("C:/Users/user/Downloads/mgwr.R")
source("C:/Users/user/Downloads/mgwr.R")
source("C:/Users/user/Downloads/mgwr.R")
source("C:/Users/user/Downloads/mgwr.R")
source("C:/Users/user/Downloads/mgwr.R")
source("C:/Users/user/Downloads/mgwr.R")
source("C:/Users/user/Downloads/mgwr.R")
source("C:/Users/user/Downloads/mgwr.R")
model_global_ols
summary(model_global_ols)
source("C:/Users/user/Downloads/mgwr.R")
summary(model_global_ols)
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
